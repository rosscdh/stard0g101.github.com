<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Django flavoured</title><link href="http://stard0g101.github.com/" rel="alternate"></link><link href="http://stard0g101.github.com/feeds/all-en.atom.xml" rel="self"></link><id>http://stard0g101.github.com/</id><updated>2012-07-03T10:55:00+02:00</updated><entry><title>Becoming a better Programmer</title><link href="http://stard0g101.github.com/become-a-better-programmer.html" rel="alternate"></link><updated>2012-07-03T10:55:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-07-03:become-a-better-programmer.html</id><summary type="html">&lt;h1&gt;Become a better Programmer&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt; Harald Armin Massa &lt;/strong&gt; 
" The Lightning Talk man "&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; Warning:&lt;/strong&gt; May contain Martin, Julie, Vicky and the other nuts. No actually, it does..&lt;/p&gt;
&lt;p&gt;Lightning talk man.. is not very lightning like.. but funny at least.&lt;/p&gt;
&lt;p&gt;This room is getting full fast.. and the fast paced anticipatory breathing is fogging up my glasses.&lt;/p&gt;
&lt;h3&gt;Announcements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;big mac room: Restful web API : 15:30&lt;/li&gt;
&lt;li&gt;python riddle 21:00&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;And now back to the game&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;started in python 2001&lt;/li&gt;
&lt;li&gt;got addicted like crack&lt;/li&gt;
&lt;li&gt;TAOCP - book to read Donald knuth&lt;/li&gt;
&lt;li&gt;goals are silly.. or are they&lt;/li&gt;
&lt;li&gt;go to pycon leipzig&lt;/li&gt;
&lt;li&gt;italian is difficult but beautiful&lt;/li&gt;
&lt;li&gt;faust an expression of the german mindset&lt;/li&gt;
&lt;li&gt;some things are best expressed in its "natural form".. or at least the form that makes it "sound" most beautiful&lt;/li&gt;
&lt;li&gt;know SQL.. (my personal thought on this as well..  its a &lt;strong&gt;required&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;having read something does not necessarily correlate with understanding that same thing&lt;/li&gt;
&lt;li&gt;programming and being a good programmer is to be slow.. thorough and consistent&lt;/li&gt;
&lt;li&gt;Python is the most pythonic language; all others are way less pythonic (lol)&lt;/li&gt;
&lt;li&gt;Remeber information, by creating a structure (mind maps)&lt;/li&gt;
&lt;li&gt;recommended book: "the accidental mind"&lt;/li&gt;
&lt;li&gt;orientation in the brain is hardwired; thus visual structure works best (we are visual animals and have evolved to "navigate")&lt;/li&gt;
&lt;li&gt;mnemonics are cute.. but fairly useles for programming as they are totally mutable&lt;/li&gt;
&lt;li&gt;the "zone" exists&lt;/li&gt;
&lt;li&gt;zoloft fu*ks up brain chemicals... lol dont take it&lt;/li&gt;
&lt;li&gt;emacs is like zoloft sucks dont use it&lt;/li&gt;
&lt;li&gt;the zone is like a trance state&lt;/li&gt;
&lt;li&gt;myths - it takes a long time to get into, and only valid for a few minutes a day.. all nonsense.&lt;/li&gt;
&lt;li&gt;the single user mode option exists for the brain&lt;/li&gt;
&lt;li&gt;to get into it try meditation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Recommendations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;get the books&lt;/li&gt;
&lt;li&gt;fast reading&lt;/li&gt;
&lt;li&gt;mind maps&lt;/li&gt;
&lt;li&gt;read abotu brain hypnosis&lt;/li&gt;
&lt;li&gt;meditation - dont be influsenced by the new age nonsense... the core it truth.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="improvement"></category><category term="coder"></category><category term="ltm"></category><category term="funny"></category></entry><entry><title>Becoming a better Programmer</title><link href="http://stard0g101.github.com/postgres-as-nosql.html" rel="alternate"></link><updated>2012-07-03T10:55:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-07-03:postgres-as-nosql.html</id><summary type="html">&lt;h1&gt;PostGres as NoSql&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;wikipedia claims: &lt;/li&gt;
&lt;/ul&gt;</summary><category term="postgres"></category><category term="python"></category><category term="nosql"></category></entry><entry><title>Spotify - Ask us anything</title><link href="http://stard0g101.github.com/spotify-ask-us-anything.html" rel="alternate"></link><updated>2012-07-03T10:55:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-07-03:spotify-ask-us-anything.html</id><summary type="html">&lt;h1&gt;Spotify&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;spotify are 100% python&lt;/li&gt;
&lt;li&gt;many different apis for customization&lt;/li&gt;
&lt;li&gt;many application layers&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;the guilty parties&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Jurgei: takes care of music acquisition and search indexes into the system.. pipeline core&lt;/li&gt;
&lt;li&gt;Martin: infrastructure automation sysadmin, tools and python is the tool&lt;/li&gt;
&lt;li&gt;Matthias: backend dev&lt;/li&gt;
&lt;li&gt;Delphine: Angel team for recruitment&lt;/li&gt;
&lt;li&gt;Alex: Payment team and payment processing subscriptions, payments is VERY important in the spotify eco&lt;/li&gt;
&lt;li&gt;Jonas: Is the singer&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Monitoring&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Munin for graphing everything (why not splunk? they can afford it)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;User profiling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;casandra is used; user profiles are stored in a cassandra blog and updated in real-time (a bit like pandora)&lt;/li&gt;
&lt;li&gt;facebook users have no stored data&lt;/li&gt;
&lt;li&gt;user billing information is not stores (good cos im pretty sure thats illegal)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Interface demo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;as many people here have not even seen spotify (due to country ban limitations), a small demo was talked about&lt;/li&gt;
&lt;li&gt;they want to be the OS of music; and are looking at discrete integration &lt;a href="http://sonos.com"&gt;http://sonos.com&lt;/a&gt; for instance is building spoitfy access in by default.&lt;/li&gt;
&lt;li&gt;apple, spotify, then smaller and smaller and smaller services. Good competition but depends where in the world you are applying the question&lt;/li&gt;
&lt;li&gt;user a p2p on the desktop client which gets data from all other nearby clients&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;API Versioning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;write an intermediate wrapper which gets phased out over time.. like v1.. v2...v3 (fade v1)&lt;/li&gt;
&lt;/ul&gt;</summary><category term="spotify"></category><category term="python"></category></entry><entry><title>Django under load</title><link href="http://stard0g101.github.com/ep-django-under-load.html" rel="alternate"></link><updated>2012-07-03T09:00:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-07-03:ep-django-under-load.html</id><summary type="html">&lt;h1&gt;Django under load&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Postgres orientated&lt;/li&gt;
&lt;li&gt;Django is aimed at devs who want to be or are starting to be the next big thing&lt;/li&gt;
&lt;li&gt;Django can run almost any sort of application type&lt;/li&gt;
&lt;li&gt;this is mostly a list of what not to do&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The "very" front-end&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;98% of the problem is apache or nginx&lt;/li&gt;
&lt;li&gt;answer is... "it doesnt matter which you choose"&lt;/li&gt;
&lt;li&gt;as long as you dont do foolish things like expose gunicorn to the web directly&lt;/li&gt;
&lt;li&gt;general rule is that these things generally dont matter except the rule of not using gunicorn facing the public&lt;/li&gt;
&lt;li&gt;most processing time is from the time the first byte arrives at the clients browser&lt;/li&gt;
&lt;li&gt;page weight is still a VERY important concept&lt;/li&gt;
&lt;li&gt;boilerplates like twitter bootstrap or html5 boilerplate .. dont take the whole concept take only what you need (obviously)&lt;/li&gt;
&lt;li&gt;avoid "site pestering", multiple http requests are death to performance&lt;/li&gt;
&lt;li&gt;reduce round-trip events, every request has a cost&lt;/li&gt;
&lt;li&gt;use a cdn, or at least ensure that your static server returns 304 not modified&lt;/li&gt;
&lt;li&gt;use a front end cache; nginx (really good built in web caching) or varnish. Some use both which is reasonable but dont put varnish in front of nginx unless 100% required and nginx can handle most scenarios&lt;/li&gt;
&lt;li&gt;no js callbacks on cached pages&lt;/li&gt;
&lt;li&gt;cookies defy page caching, any page that uses cookies will invalidate cache&lt;/li&gt;
&lt;li&gt;in the case of simple content like "Welcome to the site Bob" apply this on the client side; which allows you to cache pages and then aply customisation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;DNS Providers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DNS is a big issue; dns lookups account for much of the request response cycle&lt;/li&gt;
&lt;li&gt;use a specialist DNS as it directly affects performance especially with multiple subdomains referenced on a single page&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Django View Layer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Template first design; &lt;/li&gt;
&lt;li&gt;2 ways of rendering the view; 1 wrong 1 right&lt;/li&gt;
&lt;li&gt;Fat view layer (controller) and then template only uses 1 or two variables&lt;/li&gt;
&lt;li&gt;Let the template do the data drive. Querysets as callables and evalluated lazily&lt;/li&gt;
&lt;li&gt;Keeps memory footprint lower as it only uses what it needs and loads lazily&lt;/li&gt;
&lt;li&gt;Cache template fragments if you can; always memory based cache never db or filesystem (memcached, redis if you use it elsewhere)&lt;/li&gt;
&lt;li&gt;Cache querysets; no more db ops that you absolutely must&lt;/li&gt;
&lt;li&gt;CS101 data structures; redis is good for simple keyval hash&lt;/li&gt;
&lt;li&gt;Thundering bird.. cache invalidation cycles&lt;/li&gt;
&lt;li&gt;Cache and prerender pages... &lt;/li&gt;
&lt;li&gt;large files: X-Accel-Redirect header for large files; which stops the request cycle from hitting django and stops at nginx; never use django to serve a file total waste of a thread (especailly if using gunicorn)&lt;/li&gt;
&lt;li&gt;careful with middleware.. each middleware runs for every step of every request&lt;/li&gt;
&lt;li&gt;control transactions using @decorators&lt;/li&gt;
&lt;li&gt;defer everything; no sync tasks tasks in the view ie fetch stuff form other sites or send email.. do that all async. Long running tasks shoudl aslo be queued asynchronously.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Django Model layer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Simple and Focused.. dont generate giant models; 1 concept handful of methods&lt;/li&gt;
&lt;li&gt;natural keys instead of autokeys&lt;/li&gt;
&lt;li&gt;FKs are good, modern DBs are totally fine with them (not myisam)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1 excellent trick &lt;/strong&gt; for model design: Fast data vs Slow data.. how fast does that data change. creation data is like "Creation_date" whcih does not change often; vs "last_udpated" which changes often.. put them in different tables which would then handle row locking on frequently read and written rows&lt;/li&gt;
&lt;li&gt;Fast data in 1 table and slow in another&lt;/li&gt;
&lt;li&gt;Querysets first the entire dataset is fetched the first time its evaluated... ouch.. objects.all()[2] == FAIL all 500000 rows are fetched and then returns the 1 row.. rather: &lt;strong&gt;cant see anser for fat asses everywhere&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Transactions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;out of the box transactions are generally not good&lt;/li&gt;
&lt;li&gt;interdependent models with FKs are not handled wellby default transactions&lt;/li&gt;
&lt;li&gt;only put transactiosn around blocks that actually need it&lt;/li&gt;
&lt;li&gt;turn off "autocommit" which is a terribly named variabe name; when you set it True it turns OFF the transactions&lt;/li&gt;
&lt;li&gt;Transactions should always be short and to the point; to reduce time dependency.. start late as possible and finish as early as possible ... helsp stop blocking&lt;/li&gt;
&lt;li&gt;dont rely on django to auto clean transactions.. be explicit&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; never wait for async event to finish before commiting the transaction.. this is a major FAIL &lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;issue updates!!! never walk a queryset issuing individual save methods on each object&lt;/li&gt;
&lt;li&gt;use .raw() for querysets when the SQL gets to bulky/ungainly&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Database&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;the db is your friend.. dont fear it&lt;/li&gt;
&lt;li&gt;under load.. try not to do highly analytical queries&lt;/li&gt;
&lt;li&gt;user should never assemble arbitrary queries as its impossible to optimise.. users shoudl only have set queries&lt;/li&gt;
&lt;li&gt;basic optimisation on joins will go a long way.&lt;/li&gt;
&lt;li&gt;dont store session in the DB&lt;/li&gt;
&lt;li&gt;dont store task queue in the DB (especially when polling) looking at you &lt;strong&gt;celery&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;if the db is mostly transactional, dont store high volume data on teh same database.. click stream should go to another db as it messes up the caching&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; NEVER &lt;/strong&gt; explicitly issue a db lock; there is NEVER EVER a good reason for this. let the db handle itself&lt;/li&gt;
&lt;li&gt;Connection pooling: django has not good connection pooler; more time is lost in the open close cycle than runnign the actual query&lt;/li&gt;
&lt;li&gt;use transaction mode if using postgres as it has a basic form of connection pooling&lt;/li&gt;
&lt;li&gt;use postrgres 9,x stream replication feature: its very good.&lt;/li&gt;
&lt;li&gt;use the db routers; reads to dbA writes to dbB&lt;/li&gt;
&lt;li&gt;always replication lag (obviously) write takes time to replicate&lt;/li&gt;
&lt;li&gt;pgbouncer by "skype" is very good .. but no fail over no balancer&lt;/li&gt;
&lt;li&gt;pgpoolII sophisiticated; does fail over and routing; but does not work well with django transactions; assumes you will always modify the db and thus does nto cache and defates the softwares point.. dont use it?&lt;/li&gt;
&lt;li&gt;full text search (solr,elestic search) great for most search results.. but solr is kinda slow.. postgres full text search is good.. mysql has it but is .. well not good.&lt;/li&gt;
&lt;li&gt;in mem dbs: memcached is awesome; &lt;/li&gt;
&lt;li&gt;redis is perfect for queue and advanced ops&lt;/li&gt;
&lt;li&gt;set redis timeouts for microseconds!! as all of the in mems have bad timeouts (very long)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cloud&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;everyone uses it&lt;/li&gt;
&lt;li&gt;but any every high load site has their own staff for admin.. so cloud is not really the answer&lt;/li&gt;
&lt;li&gt;spin up and spin down in real time.. is NOT an easy to do thing and is highly unpredicatable behaviour&lt;/li&gt;
&lt;li&gt;answer is to get LOTS AND LOTS of ram as much as possible&lt;/li&gt;
&lt;li&gt;ensure cloud provider does NOT view your machine as "disposable"&lt;/li&gt;
&lt;li&gt;use fabric.. automate ALL deployments.. no human failure especially with complex lots of moving parts sites&lt;/li&gt;
&lt;li&gt;monitor EVERYTHING&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Sharding&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;only a few sites need to shard&lt;/li&gt;
&lt;li&gt;its complicated; not a 1 button solution&lt;/li&gt;
&lt;li&gt;find a good "pattern" dont do random patterns for data storage&lt;/li&gt;
&lt;li&gt;rule no 1 : understand the growth model of your data (fast vs slow data)&lt;/li&gt;
&lt;li&gt;exponential growth: likes exponential to num users&lt;/li&gt;
&lt;li&gt;isolate sharded models in the app so tehy can be dealt with independently&lt;/li&gt;
&lt;li&gt;data migration between shards is a given and will need to be dealt with&lt;/li&gt;
&lt;li&gt;architect for lag and pushing data across servers&lt;/li&gt;
&lt;li&gt;consolidation strategies for data: single consilidation quey that gets all data from all shards.. or get the shards to push to a shared database that is queried&lt;/li&gt;
&lt;li&gt;inter shard consolidation is bad... dont cross query shards&lt;/li&gt;
&lt;li&gt;shards are slices of the business and should be treate as such.. dsign for this from the start&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Django handles 20k plus request per seconds.. no sweat&lt;/li&gt;
&lt;li&gt;remove the basic stumbeling blocks&lt;/li&gt;
&lt;li&gt;small request cycles&lt;/li&gt;
&lt;li&gt;cache everything&lt;/li&gt;
&lt;li&gt;small views&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://thebuild.com/blog/"&gt;The Build - Speaker site&lt;/a&gt;&lt;/p&gt;</summary><category term="europython2012"></category><category term="django"></category><category term="load"></category></entry><entry><title>Interview with a BDFL</title><link href="http://stard0g101.github.com/EP-2012-bdfl-qa.html" rel="alternate"></link><updated>2012-07-02T17:00:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-07-02:EP-2012-bdfl-qa.html</id><summary type="html">&lt;h1&gt;Interview with a BDFL&lt;/h1&gt;
&lt;h2&gt;Q: yield&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;missed answer :( &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Q: Assert&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; Q &lt;/strong&gt; assert is a std python statment but largly unused; as it changes the behaviour in unpredicatble ways
&lt;strong&gt; A &lt;/strong&gt; False: assert is used by Guido and others very often and does not indeed change behaviour. Test your code with -o; but even if -o did not exist Guido would still claim that assert is valuable even if underused. if assert tests false it means that the post assert code is not evaluated. If that was replaced by fucntion then both arguments are evaluated even if you dont call the function; python 3 should hav ehad a better implementation; Guido regrets that.&lt;/p&gt;
&lt;h2&gt;Q: Does Python has a future in mobile&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; yes, but Guido will probably not take part in that&lt;/p&gt;
&lt;h2&gt;Q: Do you regret including X feature in P3k&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; unanswerable silly question, sorry to be hostile.&lt;/p&gt;
&lt;h2&gt;Q: Question about immutable function signatures&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; 3 unrelated segments to the question; got a little heated but meh (audience member "the questioner" probably joined in and had to clarify and kinda got handed back)&lt;/p&gt;
&lt;h2&gt;Q: Second most favourite language after python&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; C... because CPython is C&lt;/p&gt;
&lt;h2&gt;Q: Where do you see python in 10-20 years&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; another essay question; python will be alive and happy and probably have grandkids. In general python will continue to be successful. Many of the current head banger issues (GIL,static analysis) etc eventually some version of acceptance or a solution will be absorbed into the language. Pretty optimistic about the future&lt;/p&gt;
&lt;h2&gt;Q: Can you identify practices or types of character that makes a good python/programmer&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; no yes men; this is valued more than absolute approval. Nothing absolute tho... your either adept or not and this shows in the way you are not what you wear or put on your resume... but if you love to code.. it shows.&lt;/p&gt;
&lt;h2&gt;Q: What is the best way to profile and catch memory leaks on google servers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; Great question, dont really have an answer; blanking out of names.. but they exist and only run in the sdk. run the sdk with an existing memory profiler&lt;/p&gt;
&lt;h2&gt;Q: Another daft question about javascript and callbacks&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; LOL.. meh when your food smells bad.. its probably bad.. most get a weird feeling when writing callbacks and is generally regarded as bad bad bad.. its just js programmers that disagree.&lt;/p&gt;
&lt;h2&gt;Q: Why is it "None"&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; when writing python all other options felt unnatural (nil,no,etc) None just felt natural; and unassertive.. None is a uniquely python thing&lt;/p&gt;
&lt;h2&gt;Q: Does pyhton need more innovation for the massivly multicore future?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; suspects that by the time we have massivly multicore systems then the concept of shared memory space will be non-applicable. Innovation is useful but it will be a long time before innovation has reached an acceptable model that woudl be worth including in the language. Innocation is not simply including things .. its about langauge complete then looking at incorporation.&lt;/p&gt;
&lt;h3&gt;Q: Status of WSGI std in p3k&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; thought about redesigning p3k to incorporate WSGI but not enough people were interested. As a result wsgi made a small change that made python syntax possible. And thats where WSGI1 stands.&lt;/p&gt;
&lt;h2&gt;Q: given virtualenv GAE seems a step back for python&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; cant answer that needs to ask google as its them.. lol was answered by the moderator ;)&lt;/p&gt;
&lt;h2&gt;Q: whats another language like python that is simple and awesome&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; look at GO its python flavoured and seems good&lt;/p&gt;
&lt;h3&gt;Q: In ruby acceptance tests are almost universally written in cucumber why not a python version&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; go to stack overflow cucmbers lettuce etc are verbs and nouns to him. Aceptance tests are explained to the audiance.. seems quite a new concept BDD is relatively new and customer oriented. &lt;/p&gt;
&lt;h2&gt;Q: for p3k would you take a patch for import print form _past&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; No, despite laughter; print is something that is a syntactic sugar its one of the few cases where you dont have to think about translation and you can leave it to the tool. &lt;/p&gt;
&lt;h3&gt;Q: Can I submit a switch statement patch&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; its been rejected at PEP twice.. it will probably be rejected at PEP again.. the decision was made to keep python clean and simple. Future code maintainers will thank us for removing this feature its ugly and nasty.&lt;/p&gt;
&lt;h2&gt;Q: why is there a literal for every single set but the empty one?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; there are allot of people that should read the PEP before asking questions.&lt;/p&gt;
&lt;h2&gt;Q: Emacs or Vim&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; A &lt;/strong&gt; I grew up with emacs... but you the new generation are probably better off with vim &lt;em&gt;lots fo claps&lt;/em&gt;&lt;/p&gt;</summary><category term="bdfl"></category><category term="keynote"></category><category term="europython2012"></category></entry><entry><title>Coffee Break</title><link href="http://stard0g101.github.com/EP-2012-coffeee.html" rel="alternate"></link><updated>2012-07-02T16:00:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-07-02:EP-2012-coffeee.html</id><summary type="html">&lt;h1&gt;Coffee time&lt;/h1&gt;
&lt;p&gt;Met an interesting Danish bloke (Steve?) and had a good chat about big data, startups and various other bits and pieces.&lt;/p&gt;
&lt;p&gt;Then at coffee time met a wonderful group of Irish people; and had a non-stop conversation with Vicky, Julie, Michael and Margin? and adcloudMartin struck up a conversation with Julie which ended in an intersting talk about Hirigana Katakana Kanjii and the various complexities of learning the Japanese language!&lt;/p&gt;
&lt;p&gt;Julie' Hackerspace: &lt;tog.ie&gt; and &lt;a href="http://www.jpichon.net"&gt;http://www.jpichon.net&lt;/a&gt;
And Vickys site: &lt;irishbornchinese.com&gt;&lt;/p&gt;
&lt;h2&gt;Free Coffee is a must at these things&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Alt text" src="/img/learning-python.jpg" /&gt;&lt;/p&gt;</summary><category term="coffee"></category><category term="keynote"></category><category term="europython2012"></category></entry><entry><title>PyPY</title><link href="http://stard0g101.github.com/EP-2012-pypy.html" rel="alternate"></link><updated>2012-07-02T15:00:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-07-02:EP-2012-pypy.html</id><summary type="html">&lt;h1&gt;PyPY - The JIT&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Just in time compiler&lt;/li&gt;
&lt;li&gt;very fast&lt;/li&gt;
&lt;li&gt;cannot cach other jit code&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;PyPY - Py3K&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;focused on &lt;em&gt;"correctness"&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;dropped certain interpreter optimizations but will come back to them&lt;/li&gt;
&lt;li&gt;of course this is a work in progress&lt;/li&gt;
&lt;li&gt;most py3k features are implemented&lt;/li&gt;
&lt;li&gt;only unicode identifiers are &lt;strong&gt;not&lt;/strong&gt; covered yet but as time goes by will be resolved&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; Whats left then? &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;first 90% is done &lt;/li&gt;
&lt;li&gt;as always the last 10% is the tough part&lt;/li&gt;
&lt;li&gt;lots of little issuess&lt;/li&gt;
&lt;li&gt;have to port the python stdlib due to implementation specific bugs&lt;/li&gt;
&lt;li&gt;to give an idea: Jan 1621 failures in tests&lt;/li&gt;
&lt;li&gt;now only 83 failures&lt;/li&gt;
&lt;li&gt;most are simple easy to fix grunt work failures&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;http://.....&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt; Remove the GIL &lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;remove the interpreter lock&lt;/li&gt;
&lt;li&gt;my script is fast already: yes, but does the core speed decrease exponentially.. a lot of a little is a lot.&lt;/li&gt;
&lt;li&gt;python without gil exists already: python 1.4 patch Greg Stein; Jython, IronPython&lt;/li&gt;
&lt;li&gt;demo of script using all 4 cores of Armins laptop being used concurrently&lt;/li&gt;
&lt;li&gt;hardware support for the transactional events is coming in 2013 (intel, haswell processor)&lt;/li&gt;
&lt;li&gt;1 catch, you have to use threads! and &lt;em&gt;"threads are a mess"&lt;/em&gt; x2&lt;/li&gt;
&lt;li&gt;long demo of examples and then show of code and ilustrating the global counter and transaction conflict that occurs with the GIL setup; not a perfect approach but is still good as it approaches the problem from the right vector&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Argh.. watch the cable&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;is ok computers are cheap ;)&lt;/li&gt;
&lt;/ul&gt;</summary><category term="pypy"></category><category term="keynote"></category><category term="europython2012"></category></entry><entry><title>Brain Computer Interface</title><link href="http://stard0g101.github.com/EP-2012-bci.html" rel="alternate"></link><updated>2012-07-02T11:30:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-07-02:EP-2012-bci.html</id><summary type="html">&lt;h1&gt;BCI - Brain computer interface&lt;/h1&gt;
&lt;p&gt;A fantastic talk on the potential of BCI; using EEG and ECG the brain sin waves are measured and certain electric potentials are discovered&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p300 signal occurs when the brain is focused and surprised by something causes this signal to be evoked&lt;/li&gt;
&lt;li&gt;once evoked one can assigne event types to the signal&lt;/li&gt;
&lt;li&gt;watching a board of flashing letters one focuses on the letter desired and when it hilights the p300 signal is invoked and thus the user has indicated "w"&lt;/li&gt;
&lt;li&gt;Fascinating topic, but still very primative and needs much cooperation between many many specialist fields&lt;/li&gt;
&lt;li&gt;not really open source, but one can get involved if they want&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bcistandards.org/"&gt;http://bcistandards.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="BCI"></category><category term="keynote"></category><category term="europython2012"></category></entry><entry><title>Guido Van Rossum Keynote</title><link href="http://stard0g101.github.com/EP-2012-bdfl-keynote.html" rel="alternate"></link><updated>2012-07-02T09:00:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-07-02:EP-2012-bdfl-keynote.html</id><summary type="html">&lt;h1&gt;The introduction&lt;/h1&gt;
&lt;h2&gt;The hottest week of the year&lt;/h2&gt;
&lt;p&gt;And they are not kidding, its really hot today around 38 degrees celcius. But nevermind were in the hotel and things are hotting up.&lt;/p&gt;
&lt;p&gt;Got lots of swag (thanks europython!) shirts mugs and things! all the goodies that come with these conferences!&lt;/p&gt;
&lt;p&gt;The #EP people are really friendly and well organized; after picking up my badge after having to spell my surname (sorry Franchesca).&lt;/p&gt;
&lt;p&gt;Conference is 10% bigger than last year. We have access to the 5* hotels gardens and surrounding areas with shade and ponds and things.. really nice and relaxing.&lt;/p&gt;
&lt;p&gt;Python is also woman-friendly and are hosting a #womanslunch; the python community recognizes that more woman need to become involved in the community and we are all urged to talk with woman and try to get them involved and put an end to this man only image that programming has!&lt;/p&gt;
&lt;p&gt;EP also offers a free pizza lunch! which we just need to pick tickets up for. But availability is limited so we better book our places.&lt;/p&gt;
&lt;p&gt;Importnat to book the trainings as space in the halls is limited.&lt;/p&gt;
&lt;p&gt;Intranet is available at #ep to allow participants to deploy and run their demos and software available to all other particippants.&lt;/p&gt;
&lt;p&gt;Lightning talks are on offer as well, and if you wish to give one simply register and space shall be yours! As long as your Guido or at least give the correct surname!&lt;/p&gt;
&lt;p&gt;Water is available everywhere so stay hydrated, but use your Mongodb Cup.&lt;/p&gt;
&lt;p&gt;Weekend sprints are a go as well as coding competitions.&lt;/p&gt;
&lt;h2&gt;Guido BDFL KeyNote - all about the trolls&lt;/h2&gt;
&lt;p&gt;Thanks to the python software foundation; logos of osf in coffee (lady in japan) gitlatte.com ?&lt;/p&gt;
&lt;p&gt;Completely adlib of his previous talk. Please excuse contradictions if any.&lt;/p&gt;
&lt;p&gt;Trolls exist and often crop up at inopportune times. &lt;/p&gt;
&lt;p&gt;Is it not hard to deal with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Horrible language that has GIL&lt;/li&gt;
&lt;li&gt;Horrible tabs&lt;/li&gt;
&lt;li&gt;Many silly but also interesting questions that comes from the Trolls&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tip for dealign with Trolls&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do not engage, they go away eventually&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt; Whitespace &lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unusual at first, but after a while you will love it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt; Python sucks ruby rules &lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ruby people tend to say this loudedst and longest&lt;/li&gt;
&lt;li&gt;but generally the same argument can be applied to any other dynamic language&lt;/li&gt;
&lt;li&gt;all arguments are invalid.. as well as vice versas, "one time at our org we had a very slow python app that was replace with much faster java".. ok fair enough but the same applies jsut as often in the reverse case.&lt;/li&gt;
&lt;li&gt;remember from 30000 feet all dynamic languages are more or less the same; same similar problems, communities, commercial interests etc.. all dynamic languages are in the same boat.&lt;/li&gt;
&lt;li&gt;introspection is the key to everything and all languages make the internal workings of the language available (except c...)&lt;/li&gt;
&lt;li&gt;static language proponents are activly trying to find ways to bridge between static and dynamic (like google dart)&lt;/li&gt;
&lt;li&gt;dart allows optional static binding to dynamic and vice versa&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt;When will you admit python3 is a mistake&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p3 is &lt;strong&gt;not&lt;/strong&gt; a mistake&lt;/li&gt;
&lt;li&gt;more people are still using p2.x and nto p3; but more than he expected.&lt;/li&gt;
&lt;li&gt;knew that py3k would take ages to get traction&lt;/li&gt;
&lt;li&gt;but it gets better every year. i.e. numpy has excellent support but a year ago it was very shaky in terms of support but now they are all in!&lt;/li&gt;
&lt;li&gt;the port of nnupy took effort.... but it was actually not that big a deal!&lt;/li&gt;
&lt;li&gt;constant iterative process, conversion will take some time.&lt;/li&gt;
&lt;li&gt;some customers are &lt;em&gt;tied&lt;/em&gt; or at least think they are tied to p2.* how do we support them?&lt;/li&gt;
&lt;li&gt;there are a num of strategies to support both 2. and 3k at the same time&lt;/li&gt;
&lt;li&gt;1 compromise was made in p3k.. string literals prefixed with u u'unicode yay' are &lt;em&gt;STILL&lt;/em&gt; supported in p3k&lt;/li&gt;
&lt;li&gt;this has been done to allow better support for 2.x python in th p3k future&lt;/li&gt;
&lt;li&gt;is worh getting into p3k because there &lt;em&gt;will&lt;/em&gt; be a requirement in the future from your friends&lt;/li&gt;
&lt;li&gt;because its human nature to want the latest greatest and of course the buzzwords for managers will use p3k&lt;/li&gt;
&lt;li&gt;change sucks, humans hate change and most often the benefits are not obvious to the user; but in a year or two they will think it was silly to make such a fuss&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt; PyPy - what is going on, why the delay &lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Guido does not belive pypy is always better; &lt;/li&gt;
&lt;li&gt;compat problems, but he is glad they are doing it and taking compat problems so seriously&lt;/li&gt;
&lt;li&gt;they are making it better every iteration and its great and faster&lt;/li&gt;
&lt;li&gt;most systems are dependant on legacy modules and cant simply switch to pypy&lt;/li&gt;
&lt;li&gt;still a moving project; but Guido things its doing a great job and would be happy if it took over has preferred python implemntatio but they need tosort out the p3k issue&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt; Dynamic typing troll &lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;used to be tought that static typing was better than dynamic as static would find bugs at compile time rather than runtime&lt;/li&gt;
&lt;li&gt;puritinisim is a sin in itself.. dont be overstrict.. its btter to produce something than let the purity argumetn get in the way.&lt;/li&gt;
&lt;li&gt;make it, refine it, make it better&lt;/li&gt;
&lt;li&gt;pragmatisim over puritinism&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt; Python is too slow for real work &lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;n00b statement; &lt;/li&gt;
&lt;li&gt;compilers are not always the key, dynamic langauges are dynamic for a reason&lt;/li&gt;
&lt;li&gt;the static python compiler is a pipe dream but keep at it maybe someone gets lucky :)&lt;/li&gt;
&lt;li&gt;youtube runs entirely on python (except video encoder codex obviously)... not fast enough? are you serious?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt; The GIL &lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;problem arises from old legacy timeshare problem which has now changd due to new modern hardware&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;there are indeed strategies for handeling this problem, but its hard&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;python in browser.. cant do it.. but its political and not technical&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;python in android.. cant do it.. but its political and not technical&lt;/li&gt;
&lt;li&gt;lambda is NOT broken its great&lt;/li&gt;
&lt;li&gt;Guido loves functional but io in functional is a problem, at least for him.&lt;/li&gt;
&lt;li&gt;Garbage collection, forget about it its all an intellectual excercise;&lt;/li&gt;
&lt;li&gt;Additional language features.. very selective.. as every new feature adds to the learning curve; and python is meant to be simple and elegant; import this&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt; Questions &lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;will GAE ever support p3k? : Thats a question for google.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="intro"></category><category term="keynote"></category><category term="europython2012"></category></entry><entry><title>Countdown to EuroPython2012</title><link href="http://stard0g101.github.com/countdown-euro-python-2012.html" rel="alternate"></link><updated>2012-06-26T00:00:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-06-26:countdown-euro-python-2012.html</id><summary type="html">&lt;h1&gt;Countdown to Europython 2012..&lt;/h1&gt;
&lt;p&gt;Only a few more days; I'm placing the final email from the organization here for my own reference.&lt;/p&gt;
&lt;p&gt;Hello Ross Crawford-d&amp;#39;Heureuse,&lt;/p&gt;
&lt;p&gt;this is our last communication before EuroPython. To make sure you get the best out of your ticket, this is a checklist of things you should know about the conference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We have an interactive schedule where you can browse, search, favorite talks, create a personalized schedule and so on (make sure to login):
https://ep2012.europython.eu/p3/schedule/ep2012/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We also have a (offline) mobile guide through the Guidebook app:
https://ep2012.europython.eu/mobile#guide&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4-hours trainings have a booking system in place, through the schedule; booking a seat is optional, but gives precedence in case the room gets full. Login and book your training:
https://ep2012.europython.eu/p3/schedule/ep2012/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We are launching a new helpdesk service at EuroPython: you can book a 30-min slot and get free help from an experienced programmer on a specific Python-related technology or framework. Helpdesk booking is available through the schedule:
https://ep2012.europython.eu/helpdesk
https://ep2012.europython.eu/p3/schedule/ep2012/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Going to join the sprints? Have a look at the sprint list, submit your sprint, or join an existing one:
https://ep2012.europython.eu/p3/sprints/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not only talks: browse our participant list by tag, interest, country, and make your personal profile public; get in touch with people you want to meet at the conference before getting there:
https://ep2012.europython.eu/p3/ep2012/whos-coming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are still tickets available for Partner Program Tours on Saturday 30th and Sunday 1st (plus others). Take a break from the conference and enjoy Florence, Tuscany, food, wine and museums:
https://ep2012.europython.eu/partner-program&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have you heard about our tag-cocktails? You might have won free access to one:
https://ep2012.europython.eu/cocktails&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We are also selling geek-friendly prepaid SIMs with data plans for smartphones (with tethering, no filters on VOIP/Skype, etc.). Have a look:
https://ep2012.europython.eu/mobile&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Want to join our coding competitions? Google's one requires registration, have a look:
https://ep2012.europython.eu/competitions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Submit your question for Guido's Q&amp;amp;A session on Monday:
https://ep2012.europython.eu/blog/2012/06/26/ask-your-bdfl-submit-questions-q-session-guido&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lastly, be sure to subscribe to our blog RSS feed to stay up-to-date with the latest announcements about EP2012!
https://ep2012.europython.eu/blog/&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See you in Florence!&lt;/p&gt;
&lt;p&gt;The EuroPython Team&lt;/p&gt;</summary><category term="europython2012"></category></entry><entry><title>EuroPython2012</title><link href="http://stard0g101.github.com/euro-python-2012.html" rel="alternate"></link><updated>2012-06-26T00:00:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-06-26:euro-python-2012.html</id><summary type="html">&lt;h1&gt;Europython 2012..&lt;/h1&gt;
&lt;p&gt;I am seriously looking forward to &lt;a href="https://ep2012.europython.eu/p3/ep2012/whos-coming"&gt;EuroPython2012&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;The conference takes place in Florence, Italy. A city that has been on my visit-list for a very long time.&lt;/p&gt;
&lt;p&gt;My collegue "&lt;strong&gt;MartinO&lt;/strong&gt;" and I, depart Dusseldorf on Sunday 1.7.2012 and will be attending for the entire week.&lt;/p&gt;
&lt;p&gt;This blog is where, I will try to give a running list of the information that is absorbed! Both for my collegues at &lt;a href="http://adcloud.com"&gt;Adcloud&lt;/a&gt; and for whoever stumbles across it in the future.&lt;/p&gt;
&lt;p&gt;Ill try to execute the coverage in the same manner that &lt;strong&gt;Reinout van Rees&lt;/strong&gt; has done previously for &lt;a href="http://reinout.vanrees.org/weblog/2012/06/index.html"&gt;djangocon&lt;/a&gt;.. which I have found to be incredibly informative.&lt;/p&gt;
&lt;p&gt;The conference is unfortunately not single-track and Martin and I will try to attend the most interesting/useful talks of the day. Failing that, then will be outside in the sun eating gelato!&lt;/p&gt;</summary><category term="europython2012"></category></entry><entry><title>A post from the blue</title><link href="http://stard0g101.github.com/a-post-from-the-blue.html" rel="alternate"></link><updated>2012-04-16T00:00:00+02:00</updated><author><name>Ross Crawford-d'Heureuse</name></author><id>tag:stard0g101.github.com,2012-04-16:a-post-from-the-blue.html</id><summary type="html">&lt;h1&gt;Well, that was easy...&lt;/h1&gt;
&lt;p&gt;So I decided to start trying to write a blog. Perhaps this will end up simply being an unremarkable soliloquey; shouted at the walls of the unlistening cave. but it amy also turn into something interesting.&lt;/p&gt;
&lt;p&gt;I'll try to write on things of a technical nature; failing that probably just rant somewhat.&lt;/p&gt;</summary><category term="first post"></category><category term="hi there"></category><category term="what is this"></category></entry></feed>